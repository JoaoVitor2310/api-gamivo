const express = require('express');
const axios = require('axios');
const { default: slugify } = require('slugify');
require('dotenv').config();

const app = express();
app.use(express.json());


app.get('/', (req, res) => {
      res.send('Server online');
})

const port = process.env.PORT;
const url = process.env.URL;
const token = process.env.TOKEN;

app.listen(port, () => {
      console.log(`Listening to port ${port}.`);
})

// Accounts
app.get('/account-data', async (req, res) => { //nosso endpoint
      // Retorna o saldo e o fator de preço
      try {
            // Faça a consulta à outra API usando Axios ou a biblioteca de sua escolha
            const response = await axios.get(`${url}/api/public/v1/accounts/data`, { // url + endpoint + token GAMIVO
                  headers: {
                        'Authorization': `Bearer ${token}`
                  },
            });
            // Retorne os dados da consulta
            res.json(response.data); // nossa resposta
      } catch (error) {
            console.error(error);
            res.status(500).json({ error: 'Erro ao consultar a API externa.' });
      }
})

app.get('/calculate-final-price', async (req, res) => {
      // Retorna o preço final usando o fator de preço
      const price = 10;
      try {
            const response = await axios.get(`${url}/api/public/v1/accounts/calculate-final-price/${price}`, {
                  headers: {
                        'Authorization': `Bearer ${token}`
                  },
            });
            res.json(response.data);
      } catch (error) {
            console.error(error);
            res.status(500).json({ error: 'Erro ao consultar a API externa.' });
      }
})

// Offers
app.get('/offer-list', async (req, res) => {
      // Lista os jogos que estão a venda
      const { offset = 100, limit = 100 } = req.query;

      // const offset = 100; // A partir de qual jogo vai mostrar
      // const limit = 100; // Limit por página, acho que não pode ser maior que 100
      
      try {
            const response = await axios.get(`${url}/api/public/v1/offers?offset=${offset}&limit=${limit}`, {
                  headers: {
                        'Authorization': `Bearer ${token}`
                        // 'Content-Type': 'application/json',
                  },
            });
            const quantidade = response.data.length;
            console.log(quantidade);
            res.json(response.data);
      } catch (error) {
            console.error(error);
            res.status(500).json({ error: 'Erro ao consultar a API externa.' });
      }
})

app.post('/create-offer', async (req, res) => {
      // Coloca um jogo a venda

      try {
            const {
                  product,
                  wholesale_mode,
                  seller_price,
                  tier_one_seller_price,
                  tier_two_seller_price,
                  status,
                  keys, // número de chaves (unidades) disponíveis para venda.
                  is_preorder, //Indica se é preorder. Se verdadeiro, significa que a oferta é para um produto que ainda não foi lançado.
            } = req.body;

            // Validar se os campos obrigatórios estão presentes
            if (product === undefined || wholesale_mode === undefined) {
                  return res.status(400).json({ error: 'Campos obrigatórios ausentes' });
            }

            // Construir o objeto da oferta com base no esquema
            const newOffer = {
                  product, // id do produto
                  wholesale_mode, // 0: Oferta apenas no varejo. 1: Oferta no varejo e atacado.  2: Oferta apenas no atacado.
                  seller_price,  // O preço de venda para varejo. Deve ser especificado quando o modo atacado for 0 ou 1.
                  tier_one_seller_price,  // O preço de venda para pedidos por atacado (10-99 unidades). Deve ser especificado quando o modo atacado for 1 ou 2.
                  tier_two_seller_price, // O preço de venda para pedidos por atacado (100 unidades ou mais). Deve ser especificado quando o modo atacado for 1 ou 2.
                  status: status || 1, // Se o status não for fornecido, definir como 1 (ativo) por padrão
                  keys: keys || 0, // Se as chaves não forem fornecidas, definir como 0 por padrão
                  is_preorder: is_preorder || false, // Se não for fornecido, definir como false por padrão
            };

            // Fazer a solicitação POST para a API Gamivo para criar uma nova oferta
            const response = await axios.post(`${url}/api/public/v1/offers`, newOffer, {
                  headers: {
                        'Authorization': `Bearer ${token}`,
                  },
            });

            // Responder com os dados da nova oferta criada
            res.json(response.data);
      } catch (error) {
            console.error('Erro ao criar uma nova oferta:', error.message);
            res.status(500).json({ error: 'Erro ao criar uma nova oferta.' });
      }
})

app.put('/?', async (req, res) => {
      // Conecta a gamivo com o produto externo

      try {
            const {
                  product,
                  wholesale_mode,
                  seller_price,
                  tier_one_seller_price,
                  tier_two_seller_price,
                  status,
                  keys, // número de chaves (unidades) disponíveis para venda.
                  is_preorder, //Indica se é preorder. Se verdadeiro, significa que a oferta é para um produto que ainda não foi lançado.
            } = req.body;

            // Validar se os campos obrigatórios estão presentes
            if (product === undefined || wholesale_mode === undefined) {
                  return res.status(400).json({ error: 'Campos obrigatórios ausentes' });
            }

            // Construir o objeto da oferta com base no esquema
            const newOffer = {
                  product, // id do produto
                  wholesale_mode, // 0: Oferta apenas no varejo. 1: Oferta no varejo e atacado.  2: Oferta apenas no atacado.
                  seller_price,  // O preço de venda para varejo. Deve ser especificado quando o modo atacado for 0 ou 1.
                  tier_one_seller_price,  // O preço de venda para pedidos por atacado (10-99 unidades). Deve ser especificado quando o modo atacado for 1 ou 2.
                  tier_two_seller_price, // O preço de venda para pedidos por atacado (100 unidades ou mais). Deve ser especificado quando o modo atacado for 1 ou 2.
                  status: status || 1, // Se o status não for fornecido, definir como 1 (ativo) por padrão
                  keys: keys || 0, // Se as chaves não forem fornecidas, definir como 0 por padrão
                  is_preorder: is_preorder || false, // Se não for fornecido, definir como false por padrão
            };

            // Fazer a solicitação POST para a API Gamivo para criar uma nova oferta
            const response = await axios.put(`${url}/api/public/v1/offers/by-external-id`, newOffer, {
                  headers: {
                        'Authorization': `Bearer ${token}`,
                  },
            });

            // Responder com os dados da nova oferta criada
            res.json(response.data);
      } catch (error) {
            console.error('Erro ao criar uma nova oferta:', error.message);
            res.status(500).json({ error: 'Erro ao criar uma nova oferta.' });
      }
})

app.get('/search/offer/:id', async (req, res) => {
      // Procura a oferta pelo id
      const { id } = req.params;
      try {
            const response = await axios.get(`${url}/api/public/v1/offers/${id}`, {
                  headers: {
                        'Authorization': `Bearer ${token}`
                  },
            });
            // console.log(response.data.product_name);
            console.log(slugify(response.data.product_name))
            res.json(response.data);
      } catch (error) {
            console.error(error);
            res.status(500).json({ error: 'Erro ao consultar a API externa.' });
      }
})

app.get('/compare/all', async (req, res) => {
      // Comparar o preço dos concorrentes daquele jogo e descobrir qual é o menor preço

      //  Passo a passo
      // Definir o productId do jogo em questão
      // Procurar por outras pessoas vendendo aquele msm jogo
      // Descobrir qual é o menor preço que ele está sendo vendido

      // Definir o productId do jogo em questão
      const myGames = [
            120914,
            27273,
            53792,
            62158,
            47017,
            47704,
            136679,
            597,
            120526,
            604,
            34508,
            43149,
            128463,
            45551,
            119151,
            128467,
            128468,
            119348,
            46437,
            86967,
            63879,
            141433,
            35660,
            45237,
            43277,
            31411,
            45588,
            225,
            31379,
            27517,
            55765,
            50275,
            51765,
            47521,
            43299,
            58770,
            128471,
            52463,
            10895,
            47159,
            76778,
            76777,
            45972,
            52268,
            37970,
            53062,
            132986,
            144432,
            144570,
            79354,
            79369,
            79372,
            79355,
            79367,
            35592,
            141111,
            47646,
            27546,
            46105,
            129885,
            57253,
            2455,
            128474,
            53719,
            43911,
            51642,
            51746,
            40526,
            46960,
            43670,
            44268,
            144959,
            26604,
            144960,
            144961,
            144962,
            144963,
            136619,
            144964,
            144965,
            144966,
            74055,
            1767,
            40607,
            45592,
            121151,
            54654,
            67391,
            49019,
            137421,
            161,
            44471,
            119295,
            131925,
            139846,
            143457,
            36157,
            39346,
            47395,
            53004,
            51333,
            26901,
            54166,
            46430,
            133066,
            142526,
            142514,
            145201,
            145086,
            145197,
            129796,
            145199,
            145198,
            145200,
            145030,
            69976,
            82081,
            132362,
            64755,
            46309,
            142040,
            139848,
            139847,
            123722,
            132728,
            132808,
            132817,
            132812,
            141033,
            76781,
            131949,
            60812,
            72910,
            59648,
            127653,
            39954,
            2597,
            135477,
            42986,
            120915,
            138585,
            131888,
            28354,
            47013,
            2458,
            30975,
            139115,
            28347,
            136814,
            70713,
            2280,
            38056,
            26963,
            41312,
            69352,
            80802,
            139844,
            145315,
            79359,
            59091,
            71930,
            58784,
            48938,
            3071,
            145011,
            123448,
            126480,
            26372,
            130521,
            141723,
            1367,
            139734,
            1518,
            127641,
            74791,
            135084,
            54163,
            142059,
            142043,
            140353,
            135981,
            65687,
            140725,
            51545,
            35235,
            33284,
            144801,
            41414,
            45819,
            38953,
            65613,
            123408,
            80807,
            52300,
            35195,
            2925,
            133901,
            131376,
            49337,
            49335,
            330,
            52012,
            65167,
            45437,
            71666,
            139376,
            135535,
            73334,
            42232,
            44552,
            87120,
            120684,
            56170,
            126038,
            49228,
            59511,
            141541,
            143243,
            134426,
            43626,
            146281,
            56262,
            146084,
            142498,
            50646,
            50655,
            142283,
            53120,
            38076,
            60137,
            55612,
            35265,
            45469,
            78625,
            38205,
            79576,
            34488,
            69495,
            39278,
            41845,
            39313,
            38215,
            146645,
            134701,
            146401,
            28247,
            71347,
            73242,
            58587,
            39364,
            73259,
            128931,
            34849,
            48984,
            120912,
            138581,
            73281,
            141249,
            141401,
            59303,
            36074,
            135635,
            33834,
            66921,
            140691,
            50736,
            140914,
            123325,
            80812,
            138413,
            128946,
            80797,
            34177,
            146869,
            28474,
            145546,
            145835,
            74203,
            30862,
            34203,
            145525,
            146646,
            42731,
            33486,
            145953,
            36129,
            37568,
            76758,
            146687,
            81443,
            147516,
            143378,
            144136,
            69037,
            126379,
            124076,
            132611,
            148817,
            147626,
            137414,
            149176,
            149175,
            149178,
            149180,
            148139,
            143858,
            54239,
            146735,
            2568,
            31380,
            127530,
            34475,
            46838,
            59260,
            59654,
            3488,
            132908,
            46020,
            50665,
            48163,
            32931,
            34344,
            34585,
            34062,
            52464,
            26227,
            34820,
            1616,
            26230,
            58710,
            68874,
            134536,
            54015,
            145364,
            45807,
            49629,
            134506,
            57722,
            33667,
            149177,
            67545,
            2581,
            46337,
            46819,
            2483,
            124322,
            53714,
            139798,
            2562,
            67808,
            126389,
            10985,
            36184,
            79781,
            31156,
            32467,
            33197,
            40496,
            81325,
            47438,
            46626,
            48184,
            56163,
            69689,
            33944,
            43647,
            47250,
            130624,
            26053,
            60130,
            60131,
            132414,
            39022,
            69045,
            70409,
            35140,
            38495,
            41485,
            141599,
            133924,
            35324,
            376,
            73012,
            73042,
            46964,
            46071,
            41202,
            41199,
            45773,
            125861,
            83835,
            44783,
            55036,
            46880,
            134331,
            26535,
            46877,
            39801,
            46876,
            36717,
            121780,
            122131,
            73492,
            46528,
            48231,
            53847,
            40738,
            86731,
            84864,
            133848,
            122042,
            48284,
            44991,
            46881,
            36732,
            139550,
            79986,
            46186,
            51620,
            55720,
            143045,
            133081,
            44786,
            122030,
            46184,
            46531,
            39154,
            58894,
            133903,
            34957,
            44056,
            126400,
            51665,
            64844,
            41106,
            51615,
            65157,
            47531,
            4761,
            2235,
            47416,
            46530,
            46529,
            74289,
            43343,
            134733,
            143128,
            34296,
            54914,
            51839,
            30973,
            51592,
            50240,
            26913,
            1790,
            2694,
            36432,
            126560,
            64479,
            150544,
            2182,
            36015,
            41327,
            86728,
            43456,
            67397,
            71951,
            53261,
            135922,
            73335,
            124044,
            224,
            242,
            43074,
            44390,
            2530,
            49628,
            3117,
            124986,
            744,
            138892,
            146916,
            34731,
            131159,
            60280,
            147098,
            54746,
            46074,
            73332,
            81529,
            52729,
            35076,
            50251,
            65064,
            26661,
            142608,
            130043,
            122137,
            122136,
            122425,
            31476,
            50025,
            48991,
            80399,
            46605,
            51222,
            76903,
            73331,
            48310,
            143139,
            72871,
            151395,
            51813,
            129953,
            70415,
            32176,
            27951,
            132927,
            128785,
            151397,
            140954,
            46181,
            46183,
            125645,
            141090,
            72891,
            26670,
            58836,
            47253,
            134276,
            76681,
            10973,
            132632,
            3202,
            130700,
            45315,
            58622,
            69334,
            36229,
            129410,
            150668,
            45436,
            139030,
            122147,
            126416,
            131175,
            138625,
            701,
            55238,
            38236,
            129808,
            151396,
            69270,
            51688,
            35605,
            151394,
            54003,
            141474,
            3227,
            86184,
            35663,
            72913,
            28352,
            142379,
            84701,
            2245,
            126233,
            3267,
            43720,
            53024,
            131206,
            3271,
            39994,
            44716,
            34111,
            135924,
            92093,
            80928,
            33665,
            25772,
            129809,
            126037,
            33969,
            151807,
            40102,
            141375,
            36702,
            46997,
            40539,
            123372,
            47494,
            40543,
            42017,
            26100,
            34461,
            2875,
            57153,
            125028,
            40119,
            58963,
            65619,
            26868,
            34102,
            36324,
            40699,
            27622,
            27527,
            120128,
            45695,
            146928,
            25917,
            57872,
            143066,
            143067,
            46131,
            85218,
            1805,
            141701,
            42394,
            152055,
            45204,
            49274,
            31818,
            124463,
            46065,
            36742,
            67809,
            72914,
            143454,
            46422,
            11155,
            28672,
            46134,
            45776,
            39511,
            73576,
            141354,
            54269,
            50633,
            68963,
            70022,
            36250,
            148230,
            39531,
            7767,
            35071,
            128121,
            73036,
            45434,
            45435,
            61140,
            76957,
            151691,
            27101,
            46346,
            126758,
            143281,
            137341,
            131330,
            143595,
            152627,
            152626,
            152625,
            138947,
            68374,
            83665,
            70279,
            54875,
            71545,
            124444,
            86723,
            80607,
            80779,
            31943,
            45441,
            74338,
            69978,
            143068,
            119743,
            37403,
            45523,
            47648,
            57187,
            46533,
            34373,
            69547,
            49854,
            69462,
            37621,
            140418,
            86612,
            77633,
            67384,
            26414,
            34457,
            42331,
            132386,
            131969,
            138948,
            140419,
            137169,
            45377,
            54157,
            122209,
            36622,
            34311,
            122152,
            39970,
            44447,
            74579,
            45912,
            39571,
            136058,
            26973,
            40047,
            55164,
            40051,
            59811,
            62255,
            2093,
            55075,
            128518,
            122065,
            36276,
            126815,
            39792,
            74320,
            3056,
            73003,
            1349,
            70931,
            50169,
            59766,
            65620,
            77227,
            50288,
            120379,
            62419,
            1362,
            146806,
            40263,
            66217,
            51131,
            40286,
            78912,
            42043,
            75327,
            54046,
            139379,
            145934,
            68756,
            122817,
            77902,
            122215,
            72689,
            37891,
            73047,
            141930,
            49625,
            36437,
            10758,
            65292,
            143287,
            143288,
            140880,
            140881,
            143290,
            153755,
            39458,
            130186,
            143291,
            143292,
            33641,
            3430,
            135275,
            39113,
            39268,
            55460,
            39373,
            39745,
            58719,
            51709,
            43855,
            43869,
            36043,
            35618,
            43910,
            35572,
            85886,
            31328,
            134629,
            28788,
            48183,
            30870,
            37432,
            50542,
            56249,
            26258,
            26966,
            71657,
            45075,
            51617,
            41319,
            133690,
            26757,
            43283,
            45311,
            43046,
            34364,
            80817,
            139380,
            71682,
            139869,
            125414,
            63548,
            139870,
            139871,
            139872,
            139874,
            139875,
            141106,
            141107,
            63892,
            78969,
            42642,
            140879,
            67407,
            140700,
            37275,
            249,
            48920,
            133847,
            123646,
            144912,
            45594,
            149582,
            140766,
            77817,
            65849,
            38200,
            130277,
            143597,
            70001,
            133373,
            39180,
            127730,
            476,
            2135,
            33707,
            2202,
            34846,
            2486,
            66124,
            153776,
            42869,
            61145,
            127332,
            122555,
            141716,
            145931,
            140911,
            140922,
            798,
            137408,
            50761,
            143064,
            45153,
            67446,
            10723,
            143844,
            67158,
            123104,
            131025,
            2027,
            1863,
            131361,
            150312,
            35612,
            79654,
            36133,
            2303,
            143013,
            128746,
            1257,
            2920,
            39685,
            135640,
            42935,
            1281,
            149724,
            31611,
            45712,
            40193,
            42014,
            53886,
            154823,
            151047,
            149672,
            146303,
            150316,
            148242,
            154162,
            148137,
            45205,
            155111,
            153772,
            127074,
            55037,
            68755,
            141104,
            142367,
            34776,
            126463,
            151454,
            153432,
            154815,
            153163,
            154817,
            139839,
            59866,
            1641,
            31272,
            37415,
            134416,
            149133,
            143411,
            60266,
            34020,
            151050,
            153797,
            154819,
            3512,
            3549,
            59636,
            52327,
            71268,
            128336,
            41340,
            1001,
            132205,
            135170,
            45035,
            123176,
            46581,
            63910,
            28671,
            123583,
            155685,
            123260,
            133930,
            289,
            358,
            63171,
            51394,
            34084,
            46629,
            72223,
            126823,
            52321,
            41229,
            46062,
            42741,
            62055,
            155626,
            42816,
            49949,
            46576,
            47255,
            2948,
            49617,
            134271,
            140921,
            33394,
            35019,
            58731,
            59296,
            134254,
            154802,
            149750,
            806,
            828,
            50399,
            5179,
            39372,
            150834,
            899,
            35810,
            66086,
            68256,
            26442,
            58530,
            48823,
            40179,
            43141,
            51407,
            34098,
            119293,
            27595,
            124921,
            28071,
            11157,
            45994,
            54167,
            3244,
            154809,
            34984,
            55738,
            141742,
            51329,
            68446,
            45909,
            36646,
            152141,
            152307,
            151510,
            35866,
            46943,
            143070,
            135104,
            38770,
            72423,
            153136,
            150147,
            137135,
            122498,
            155578,
            138640,
            149968,
            156666,
            156582,
            156581,
            134249,
            43630,
            76122,
            124723,
            146878,
            131854,
            134246,
            42996,
            129176,
            26951,
            141041,
            44980,
            138445,
            145050,
            146081,
            11924,
            31401,
            31234,
            69442,
            156166,
            135273,
            2612,
            135139,
            31255,
            13432,
            38733,
            37643,
            58321,
            381,
            41443,
            135750,
            35835,
            81347,
            83280,
            2302,
            2878,
            44734,
            33331,
            139383,
            34063,
            890,
            43865,
            3249,
            1966,
            940,
            33988,
            37556,
            63915,
            51297,
            152871,
            122517,
            65904,
            124942,
            78952,
            35074,
            36713,
            35825,
            71022,
            35632,
            39929,
            37125,
            50183,
            2970,
            59702,
            132764,
            74764,
            54021,
            126759,
            79349,
            35607,
            131146,
            128614,
            83941,
            33702,
            47389,
            35112,
            896,
            71613,
            144483,
            67595,
            67538,
            66579,
            85891,
            36595,
            27088,
            79173,
            158039,
            692,
            27126,
            27717,
            52529,
            156665,
            2199,
            139425,
            42028,
            1187,
            123278,
            85699,
            1368,
            121924,
            27226,
            71035,
            40918,
            45426,
            3105,
            1665,
            1639,
            1624,
            121200,
            37522,
            158174,
            35300,
            3261,
            35201,
            74607,
            63630,
            35191,
            138347,
            69736,
            131487,
            80397,
            66914,
            41471,
            121252,
            54164,
            158160,
            45553,
            158106,
            126426,
            99,
            50815,
            52044,
            1763,
            43154,
            66452,
            123764,
            157511,
            158441,
            131526,
            27283,
            35901,
            7761,
            80787,
            61838,
            42302,
            141639,
            65113,
            157868,
            45884,
            145118,
            38157,
            35823,
            155292,
            158242,
            123275,
            158152,
            157872,
            123928,
            80790,
            143289,
            151329,
            31634,
            31526,
            138406,
            83175,
            152084,
            51420,
            128462,
            128473,
            36419,
            51416,
            1877,
            74934,
            2475,
            34086,
            158107,
            123972,
            45495,
            157131,
            157820,
            130745,
            985,
            38259,
            38150,
            26639,
            27298,
            123530,
            63845,
            137055,
            140975,
            40655,
            68565,
            44675,
            27135,
            61337,
            70407,
            155011,
            151545,
            148866,
            10903,
            54271,
            49766,
            234,
            47272,
            2103,
            28869,
            1184,
            1954,
            34374,
            39362,
            134270,
            57342,
            150245,
            46429,
            621,
            27614,
            65389,
            43921,
            34750,
            123264,
            73299,
            31206,
            122029,
            67319,
            77998,
            79858,
            40634,
            140762,
            141294,
            158258,
            139726,
            75731,
            63487,
            135766,
            57917,
            123692,
            130236,
            2368,
            83781,
            85238,
            49410,
            158928,
            40584,
            2188,
            13418,
            59528,
            59530,
            59529,
            59523,
            69351,
            80815,
            71445,
            58804,
            39747,
            75232,
            58303,
            37695,
            84763,
            46638,
            134314,
            150547,
            2371,
            39961,
            40036,
            47539,
            51123,
            158283,
            51597,
            10925,
            27221,
            144590,
            70803,
            123526,
            7799,
            80809,
            11171,
            131153,
            47686,
            34217,
            3063,
            40254,
            140695,
            51234,
            124029,
            40946,
            26897,
            47522,
            31822,
            2672,
            27106,
            124036,
            1028,
            69440,
            66587,
            154492,
            151048,
            148232,
            149656,
            145769,
            79358,
            150545,
            42412,
            2632,
            158816,
            1815,
            52744,
            149858,
            141668,
            58623,
            159030,
            68383,
            121443,
            60353,
            50623,
            80564,
            25855,
            51421,
            122214,
            139638,
            136630,
            2481,
            42209,
            158856,
            43608,
            159855,
            2183,
            80554,
            144583,
            47586,
            39839,
            151189,
            34320,
            27615,
            38103,
            51132,
            2643,
            141615,
            120207,
            76953,
            51812,
            27829,
            31847,
            42236,
            68799,
            140730,
            47650,
            37073,
            58723,
            159032,
            7769,
            130979,
            80519,
            70368,
            35652,
            83550,
            83366,
            155265,
            149868,
            66286,
            43938,
            142041,
            43092,
            64773,
            56689,
            46890,
            80558,
            119156,
            75212,
            119157,
            59441,
            72549,
            46438,
            58500,
            27366,
            134171,
            157630,
            80156,
            128015,
            83302,
            28587,
            32472,
            46887,
            133856,
            70189,
            60846,
            40588,
            35864,
            81659,
            43594,
            42480,
            137161,
            36414,
            43027,
            121972,
            119527,
            67514,
            66861,
            2204,
            76250,
            42583,
            37234,
            28264,
            70039,
            86288,
            65584,
            75344,
            34211,
            44367,
            70515,
            52968,
            28706,
            10711,
            11925,
            11041,
            35327,
            129971,
            67551,
            10749,
            56702,
            69354,
            895,
            83303,
            11892,
            37507,
            51594,
            34233,
            46882,
            45341,
            49809,
            565,
            28542,
            69347,
            152300,
            153410,
            46884,
            34142,
            34146,
            34147,
            28544,
            42305,
            28028,
            1565,
            43892,
            2201,
            124443,
            135011,
            45675,
            2655,
            814,
            2262,
            813,
            137270,
            2227,
            1636,
            2237,
            3262,
            83788,
            83790,
            41308,
            61480,
            1850,
            28111,
            42901,
            27128,
            59386,
            70038,
            124857,
            67130,
            81458,
            136144,
            45505,
            50628,
            119146,
            43399,
            142764,
            58159,
            145581,
            33945,
            76247,
            73274,
            144439,
            368,
            145312,
            693,
            129419,
            11183,
            1397,
            121247,
            79174,
            33196,
            40917,
            85429,
            132706,
            142517,
            101,
            105,
            108,
            3392,
            846,
            142716,
            100,
            641,
            921,
            26767,
            2238,
            1284,
            28249,
            163115,
            47597,
            10830,
            49461,
            34447,
            26373,
            150432,
            62461,
            87127,
            39862,
            161025,
            126172,
            32336,
            133107,
            389,
            72021,
            136885,
            2126,
            160689,
            27039,
            8569,
            60985,
            27216,
            38663,
            146249,
            50281,
            41369,
            69099,
            162657,
            160273,
            159522,
            159327,
            162224,
            163530,
            31004,
            142477,
            153345,
            74143,
            78616,
            44112,
            132363,
            159950,
            60668,
            121757,
            130540,
            38001,
            133994,
            75701,
            121449,
            46932,
            10910,
            151423,
            155996,
            141727,
            120301,
            80552,
            140484,
            163763,
            10837,
            133310
      ];

      // console.log(myGames.length);
      // res.json(myGames.length);

      for (let i = 0; i < myGames.length; i++) {
            try {
                  // Procurar por outras pessoas vendendo aquele msm jogo
                  const response = await axios.get(`${url}/api/public/v1/products/${myGames[i]}/offers`, {
                        headers: {
                              'Authorization': `Bearer ${token}`
                        },
                  });
                  // console.log(slugify(response.data.product_name))
                  // res.json(response.data); // Check

                  // Descobrir qual é o menor preço que ele está sendo vendido
                  let menorPreco = Number.MAX_SAFE_INTEGER; // Define um preço alto para depois ser substituído pelos menores preços de verdade

                  if(response.data.length == 0){
                        console.log(`Você é o único vendedor do productId: ${myGames[i]}`);
                  }else{
                        for (const produto of response.data) {
                              // Obtém o preço de varejo do produto
                              const precoAtual = produto.retail_price;
      
                              if (precoAtual < menorPreco) {
                                    menorPreco = precoAtual;
                              }
                        }
                        console.log(`Menor preço do productId: ${myGames[i]} é: ${menorPreco}`);
                  }

                  //entre 63879 e 35660(pelo array, é o 141433) dá erro ao consultar a API


                  // Ideias futuras: ver se vale a pena vender o jogo 1 centavo mais barato, comparando esse preço com a tabela de custos
                  // Definir o limite de preço, para não abaixar muito, isso é até melhor que a ideia de cima
                  // Definir o tempo que a api irá ficar checando se ainda está como o melhor preço

            } catch (error) {
                  console.error(error);
                  res.status(500).json({ error: 'Erro ao consultar a API externa.' });
            }

      }

      // produto 71215 - offer 2499645 - Iron Sea: Lost Land DLC EN/DE/RU Global - verde
      // produto 33680 - offer 33680 - The King's Bird EN/DE/FR/RU/ZH/ES Global - laranja
})

app.get('/compare/:id', async (req, res) => {
      // Comparar o preço dos concorrentes daquele jogo e descobrir qual é o menor preço

      //  Passo a passo
      // Definir o productId do jogo em questão
      // Procurar por outras pessoas vendendo aquele msm jogo
      // Descobrir qual é o menor preço que ele está sendo vendido

      // Definir o productId do jogo em questão
      const { id } = req.params; // O jogo está sendo recebido pelo id nos params

      try {
            // Procurar por outras pessoas vendendo aquele msm jogo
            const response = await axios.get(`${url}/api/public/v1/products/${id}/offers`, {
                  headers: {
                        'Authorization': `Bearer ${token}`
                  },
            });
            // console.log(slugify(response.data.product_name))
            res.json(response.data); // Check

            // Descobrir qual é o menor preço que ele está sendo vendido
            let menorPreco = Number.MAX_SAFE_INTEGER; // Define um preço alto para depois ser substituído pelos menores preços de verdade

            for (const produto of response.data) {
                  // Obtém o preço de varejo do produto
                  const precoAtual = produto.retail_price;

                  if (precoAtual < menorPreco) {
                        menorPreco = precoAtual;
                  }
            }

            console.log('Menor preço de varejo:', menorPreco);

            // Ideias futuras: ver se vale a pena vender o jogo 1 centavo mais barato, comparando esse preço com a tabela de custos
            // Definir o limite de preço, para não abaixar muito, isso é até melhor que a ideia de cima
            // Definir o tempo que a api irá ficar checando se ainda está como o melhor preço

      } catch (error) {
            console.error(error);
            res.status(500).json({ error: 'Erro ao consultar a API externa.' });
      }


      // produto 71215 - offer 2499645 - Iron Sea: Lost Land DLC EN/DE/RU Global - verde
      // produto 33680 - offer 33680 - The King's Bird EN/DE/FR/RU/ZH/ES Global - laranja
})


